import {
    PageContainer,
    FooterToolbar,
    ProCard,
    ProForm,
    ProFormCheckbox,
    ProFormDatePicker,
    ProFormDateRangePicker,
    ProFormDigit,
    ProFormSelect,
    ProFormText,
    StepsForm,
    ProFormDependency,
    ProFormList,
    ProFormGroup,
    ProFormRadio,
    ProFormSegmented,
    ProFormTextArea,
} from '@ant-design/pro-components';
import {Row, Col, Space, message, Button, Form, DatePicker, Image} from 'antd';
import {UploadOutlined, UserOutlined} from '@ant-design/icons';

import {createUser} from "@/services/wp-api/User";
import {request} from '@umijs/max';
import {date, datetime} from "mockjs/src/mock/random/date";
import moment from 'moment';
import React, {useEffect, useState} from "react";


const waitTime = (time = 100) => {
    return new Promise((resolve) => {
        setTimeout(() => {
            resolve(true);
        }, time);
    });
};


const onFinishHandlerStepsForm = (values) => {
    console.log('onFinishHandlerStepsForm');
    console.log('Received values of form: ', values);

    const request_data = {
        first_name: values?.staff_member?.step_01?.bio_details?.first_name,
        last_name: values?.staff_member?.step_01?.bio_details?.last_name,
        name: values?.staff_member?.step_01?.bio_details?.first_name + ' ' + values?.staff_member?.step_01?.bio_details?.last_name,
        nickname: values?.staff_member?.step_01?.bio_details?.nick_name,
        description: values?.staff_member?.step_01?.bio_details?.biographical_info,
        email: values?.staff_member?.step_01?.contact_details?.email,
        url: values?.staff_member?.step_01?.contact_details?.website,
        // username: values?.staff_member?.step_02?.account_details?.username,
        username: values?.staff_member?.step_01?.contact_details?.email,
        password: values?.staff_member?.step_02?.account_details?.password,
        roles: 'ech_staff_member',
        meta: {
            ech_user_profile_image_url: values?.staff_member?.step_01?.bio_details?.staff_member_profile_image,
            ech_gender: values?.staff_member?.step_01?.bio_details?.gender,
            ech_dob: moment(new Date(values?.staff_member?.step_01?.bio_details?.date_of_birth)).format('YYYY-MM-DD'),
            ech_phone_no: values?.staff_member?.step_01?.contact_details?.phone_number,
            ech_street_address_line_1: values?.staff_member?.step_01?.mailing_details?.Street_address_line_1,
            ech_street_address_line_2: values?.staff_member?.step_01?.mailing_details?.Street_address_line_2,
            ech_country_region: values?.staff_member?.step_01?.mailing_details?.country_region,
            ech_state_county: values?.staff_member?.step_01?.mailing_details?.state_county,
            ech_city: values?.staff_member?.step_01?.mailing_details?.city,
            ech_postcode_zip: values?.staff_member?.step_01?.mailing_details?.postcode_zip,
        },
    }

    const createStaffMember = async () => {
        try {
            const msg = createUser(
                {},
                {
                    data: request_data,
                }
            );
            // return msg.data;
            return msg;
        } catch (error) {
            console.log('createStaffMember - error');
            console.log(error);
            // history.push(loginPath);
        }
        return undefined;
    };

    const staffMemberCreated = createStaffMember();
    console.log('staffMemberCreated');
    console.log(staffMemberCreated);

};

const CreateStaffMember = () => {

    const [staffMemberProfileImageUrl, setStaffMemberProfileImageUrl] = useState('');

    const [form] = Form.useForm();

    useEffect(() => {
        form.setFieldValue(['staff_member', 'step_01', 'bio_details', 'staff_member_profile_image'], staffMemberProfileImageUrl);
        console.log('staffMemberProfileImageUrl - case 01');
        console.log(staffMemberProfileImageUrl);
    }, [staffMemberProfileImageUrl, form]);

    const initialValues = {
        staff_member: {
            step_01: {
                bio_details: {
                    staff_member_profile_image: '',
                    first_name: '',
                    last_name: '',
                    nick_name: '',
                    gender: '',
                    date_of_birth: Date.now(),
                    biographical_info: '',
                },
                contact_details: {
                    phone_number: '',
                    email: '',
                    website: '',
                },
                mailing_details: {
                    Street_address_line_1: '',
                    Street_address_line_2: '',
                    country_region: '',
                    state_county: '',
                    city: '',
                    postcode_zip: '',
                }
            },
            step_02: {
                account_details: {
                    username: '', password: ''
                },
            },
        },
    };


    return (
        <PageContainer>
            <StepsForm
                onFinish={async (values) => {
                    console.log(values);
                    await waitTime(1000);
                    onFinishHandlerStepsForm(values);
                    message.success('Submitted successfully');
                }}
                formProps={{
                    validateMessages: {
                        required: 'This is required',
                    },
                }}
                submitter={{
                    render: (_, dom) => <FooterToolbar>{dom}</FooterToolbar>,
                }}
            >
                <StepsForm.StepForm
                    name="profile_details"
                    title="Profile Details"
                    onFinish={async () => {
                        await waitTime(2000);
                        return true;
                    }}
                    layout='vertical'
                    grid={true}
                    // rowProps={{
                    //   gutter: [16],
                    // }}
                    initialValues={initialValues}
                    form={form}
                >
                    <ProCard
                        title="BIO Details"
                        bordered
                        headerBordered
                        collapsible
                        size="default"
                        type="inner"
                        style={{
                            marginBlockEnd: 15,
                            minWidth: 800,
                            maxWidth: '100%',
                        }}
                        onCollapse={(collapse) => console.log(collapse)}
                    >
                        <Row
                            gutter={{
                                xs: 8,
                                sm: 16,
                                md: 24,
                                lg: 32,
                            }}
                        >
                            <Col span={8}>

                                <ProForm.Group size={24}>
                                    <Col span={24}>
                                        <Image
                                            width='100%'
                                            height={200}
                                            src={staffMemberProfileImageUrl}
                                            fallback={DEFAULT_USER_PROFILE_IMAGE_URL}
                                        />
                                    </Col>
                                    <Col span={24} style={{'text-align': 'center'}}>
                                        <Button
                                            type="primary"
                                            icon={<UploadOutlined/>}
                                            // loading={loadings[1]}
                                            style={{'margin': '10px 0px 0px 0px'}}
                                            // onClick={
                                            //
                                            //   (event) => {
                                            //     // wp media call
                                            //     console.log('ldugl - logo-uploader');
                                            //
                                            //     let file_frame; // variable for the wp.media file_frame
                                            //     // if the file_frame has already been created, just reuse it
                                            //     if ( file_frame ) {
                                            //       console.log('ldugl - logo-uploader - case 01');
                                            //       file_frame.open();
                                            //       return;
                                            //     }else{
                                            //       console.log('ldugl - logo-uploader - case 02');
                                            //     }
                                            //
                                            //     file_frame = wp.media.frames.file_frame = wp.media({
                                            //       // title: $( this ).data( 'uploader_title' ),
                                            //       title: event?.target?.getAttribute( 'data-uploader_title' ),
                                            //       button: {
                                            //         // text: $( this ).data( 'uploader_button_text' ),
                                            //         text: event?.target?.getAttribute( 'data-uploader_button_text' ),
                                            //       },
                                            //       multiple: false // set this to true for multiple file selection
                                            //     });
                                            //
                                            //     file_frame.on( 'select', function() {
                                            //       console.log('image is selected');
                                            //
                                            //       let attachment = file_frame.state().get('selection').first().toJSON();
                                            //       console.log('attachment');
                                            //       console.log(attachment);
                                            //       setOrganizationLogoUrl(attachment?.url);
                                            //     });
                                            //
                                            //     file_frame.on('open',function() {
                                            //       // Do something
                                            //       console.log('file_frame is opened');
                                            //       // $('.ldugl-group-logo-uploader-wraper-overlay').removeClass('hidden');
                                            //     });
                                            //
                                            //
                                            //     file_frame.on('close',function() {
                                            //       // Do something
                                            //       console.log('file_frame is closed');
                                            //       // $('.ldugl-group-logo-uploader-wraper-overlay').addClass('hidden');
                                            //     });
                                            //
                                            //     file_frame.open();
                                            //
                                            //   } }

                                            onClick={

                                                (event) => {
                                                    // wp media call
                                                    console.log('ldugl - profile-image-uploader');

                                                    let file_frame; // variable for the wp.media file_frame
                                                    // if the file_frame has already been created, just reuse it
                                                    if (file_frame) {
                                                        console.log('ldugl - profile-image-logo-uploader - case 01');
                                                        file_frame.open();
                                                        return;
                                                    } else {
                                                        console.log('ldugl - profile-image-logo-uploader - case 02');
                                                    }

                                                    file_frame = wp.media.frames.file_frame = wp.media({
                                                        // title: $( this ).data( 'uploader_title' ),
                                                        title: event?.target?.getAttribute('data-uploader_title'),
                                                        button: {
                                                            // text: $( this ).data( 'uploader_button_text' ),
                                                            text: event?.target?.getAttribute('data-uploader_button_text'),
                                                        },
                                                        multiple: false // set this to true for multiple file selection
                                                    });

                                                    file_frame.on('select', function () {
                                                        console.log('image is selected');

                                                        let attachment = file_frame.state().get('selection').first().toJSON();
                                                        console.log('attachment');
                                                        console.log(attachment);
                                                        setStaffMemberProfileImageUrl(attachment?.url);
                                                        console.log('setStaffMemberProfileImageUrl - case 02');
                                                        console.log(setStaffMemberProfileImageUrl);
                                                    });

                                                    file_frame.on('open', function () {
                                                        // Do something
                                                        console.log('file_frame is opened');
                                                        // $('.ldugl-group-logo-uploader-wraper-overlay').removeClass('hidden');
                                                    });


                                                    file_frame.on('close', function () {
                                                        // Do something
                                                        console.log('file_frame is closed');
                                                        // $('.ldugl-group-logo-uploader-wraper-overlay').addClass('hidden');
                                                    });

                                                    file_frame.open();

                                                }}

                                        >
                                            Change Picture!
                                        </Button>

                                        <ProFormText
                                            name={['staff_member', 'step_01', 'bio_details', 'staff_member_profile_image']}
                                            label="Staff Member Profile Image URL"
                                            tooltip="The legal name of the staff member"
                                            placeholder="please enter your staff member legal name"
                                            // hidden={true}
                                        />
                                    </Col>
                                </ProForm.Group>
                            </Col>
                            <Col span={16}>
                                <ProForm.Group size={24}>
                                    <ProFormText
                                        name={['staff_member', 'step_01', 'bio_details', 'first_name']}
                                        label="First Name"
                                        tooltip="The legal name"
                                        placeholder="please enter your legal name"
                                        // rules={[{ required: true }]}
                                        fieldProps={{
                                            prefix: <UserOutlined/>,
                                            // size: 'large',

                                            onChange: (e) => {
                                                console.log('e.target.value');
                                                console.log(e.target.value);
                                            }
                                        }}
                                        colProps={{xs: 24, sm: 24, md: 8, lg: 8, xl: 8}}
                                    />
                                    <ProFormText
                                        name={['staff_member', 'step_01', 'bio_details', 'last_name']}
                                        label="Last Name"
                                        tooltip="The legal name"
                                        placeholder="please enter your legal name"
                                        // rules={[{ required: true }]}
                                        fieldProps={{
                                            prefix: <UserOutlined/>,
                                            // size: 'large',

                                            onChange: (e) => {
                                                console.log('e.target.value');
                                                console.log(e.target.value);
                                            }
                                        }}
                                        colProps={{xs: 24, sm: 24, md: 8, lg: 8, xl: 8}}
                                    />
                                    <ProFormText
                                        name={['staff_member', 'step_01', 'bio_details', 'nick_name']}
                                        label="Nick Name"
                                        tooltip="The legal name"
                                        placeholder="please enter your legal name"
                                        // rules={[{ required: true }]}
                                        fieldProps={{
                                            prefix: <UserOutlined/>,
                                            // size: 'large',

                                            onChange: (e) => {
                                                console.log('e.target.value');
                                                console.log(e.target.value);
                                            }
                                        }}
                                        colProps={{xs: 24, sm: 24, md: 8, lg: 8, xl: 8}}
                                    />
                                </ProForm.Group>
                                <ProForm.Group size={24}>
                                    <ProFormRadio.Group
                                        name={['staff_member', 'step_01', 'bio_details', 'gender']}
                                        label="Gender"
                                        radioType="button"
                                        options={[
                                            {
                                                label: 'Male',
                                                value: 'male',
                                            },
                                            {
                                                label: 'Female',
                                                value: 'female',
                                            },
                                            {
                                                label: 'Others',
                                                value: 'others',
                                            },
                                        ]}
                                        colProps={{xs: 24, sm: 24, md: 12, lg: 12, xl: 12}}
                                    />

                                    <ProFormDatePicker
                                        label="Date of Birth"
                                        name={['staff_member', 'step_01', 'bio_details', 'date_of_birth']}
                                        // placeholder="5453-763876-7686"
                                        // maxLength={20}
                                        // min={1}
                                        // max={10}
                                        // fieldProps={{ precision: 0 }}
                                        colProps={{xs: 24, sm: 24, md: 12, lg: 12, xl: 12}}
                                    />
                                    <ProFormTextArea
                                        name={['staff_member', 'step_01', 'bio_details', 'biographical_info']}
                                        label="Biographical Info"
                                        placeholder="Share a little biographical information to fill out your profile. This may be shown publicly. "
                                    />
                                </ProForm.Group>
                            </Col>
                        </Row>
                    </ProCard>

                    <ProCard
                        title="Contact Details"
                        bordered
                        headerBordered
                        collapsible
                        size="default"
                        type="inner"
                        style={{
                            marginBlockEnd: 15,
                            minWidth: 800,
                            maxWidth: '100%',
                        }}
                    >
                        <ProForm.Group size={24}>
                            <ProFormText
                                label="Phone No."
                                name={['staff_member', 'step_01', 'contact_details', 'phone_number']}
                                placeholder="+2974837487 etc."
                                // min={1}
                                // max={10}
                                fieldProps={{precision: 0}}
                                colProps={{xs: 24, sm: 24, md: 8, lg: 8, xl: 8}}
                            />
                            <ProFormText
                                label="Email"
                                name={['staff_member', 'step_01', 'contact_details', 'email']}
                                tooltip="The legal name of the organization"
                                placeholder="info@example.com etc."
                                // rules={[{ required: true }]}
                                colProps={{xs: 24, sm: 24, md: 8, lg: 8, xl: 8}}
                            />
                            <ProFormText
                                label="Website"
                                name={['staff_member', 'step_01', 'contact_details', 'website']}
                                tooltip="The legal name of the organization"
                                placeholder="http://example.com"
                                // rules={[{ required: true }]}
                                colProps={{xs: 24, sm: 24, md: 8, lg: 8, xl: 8}}
                            />
                        </ProForm.Group>
                    </ProCard>

                    <ProCard
                        title="Mailing Details"
                        bordered
                        headerBordered
                        collapsible
                        size="default"
                        type="inner"
                        style={{
                            marginBlockEnd: 15,
                            minWidth: 800,
                            maxWidth: '100%',
                        }}
                    >
                        <ProForm.Group size={24}>
                            <ProFormText
                                name={['staff_member', 'step_01', 'mailing_details', 'Street_address_line_1']}
                                label="Street address line 1"
                                tooltip="The legal name"
                                placeholder="Please Enter Street Address"
                                // rules={[{ required: true }]}
                                colProps={{xs: 24, sm: 24, md: 12, lg: 12, xl: 12}}
                            />
                            <ProFormText
                                name={['staff_member', 'step_01', 'mailing_details', 'Street_address_line_2']}
                                label="Street address line 2"
                                tooltip="The legal name"
                                placeholder="Please Enter Street Address"
                                // rules={[{ required: true }]}
                                colProps={{xs: 24, sm: 24, md: 12, lg: 12, xl: 12}}
                            />
                            <ProFormSelect
                                name={['staff_member', 'step_01', 'mailing_details', 'country_region']}
                                label="Country / Region"
                                showSearch
                                debounceTime={300}
                                options={[
                                    {
                                        label: 'England',
                                        value: 'england',
                                    },
                                    {
                                        label: 'Scotland',
                                        value: 'scotland',
                                    },
                                    {
                                        label: 'Wales',
                                        value: 'wales',
                                    },
                                    {
                                        label: 'Northern Ireland',
                                        value: 'northern_ireland',
                                    },
                                ]}
                                colProps={{xs: 24, sm: 24, md: 12, lg: 12, xl: 12}}
                                // rules={[{ required: true, message: 'Please select your organization type!' }]}
                            />
                            <ProFormText
                                name={['staff_member', 'step_01', 'mailing_details', 'state_county']}
                                label="State / County"
                                tooltip="The legal name"
                                placeholder="Please Enter State / County"
                                // rules={[{ required: true }]}
                                colProps={{xs: 24, sm: 24, md: 12, lg: 12, xl: 12}}
                            />
                            <ProFormText
                                name={['staff_member', 'step_01', 'mailing_details', 'city']}
                                label="City"
                                tooltip="The legal name"
                                placeholder="Please Enter City"
                                // rules={[{ required: true }]}
                                colProps={{xs: 24, sm: 24, md: 12, lg: 12, xl: 12}}
                            />
                            <ProFormText
                                name={['staff_member', 'step_01', 'mailing_details', 'postcode_zip']}
                                label="Post Code / ZIP"
                                tooltip="The legal name"
                                placeholder="Please Enter Post Code / ZIP"
                                // rules={[{ required: true }]}
                                colProps={{xs: 24, sm: 24, md: 12, lg: 12, xl: 12}}
                            />
                        </ProForm.Group>
                    </ProCard>
                </StepsForm.StepForm>

                <StepsForm.StepForm
                    name="account"
                    title="Account Details"
                    onFinish={async () => {
                        await waitTime(2000);
                        return true;
                    }}
                    layout='vertical'
                    grid={true}
                    // rowProps={{
                    //   gutter: [16],
                    // }}
                    initialValues={initialValues}
                    form={form}
                >
                    <ProCard
                        title="Account Details"
                        bordered
                        headerBordered
                        collapsible
                        size="default"
                        type="inner"
                        style={{
                            marginBlockEnd: 15,
                            minWidth: 800,
                            maxWidth: '100%',
                        }}
                    >
                        <ProForm.Group size={24}>
                            <ProFormText
                                name={['staff_member', 'step_02', 'account_details', 'username']}
                                label="Username"
                                tooltip="The legal name"
                                placeholder="please enter your legal name"
                                colProps={{xs: 24, sm: 24, md: 12, lg: 12, xl: 12}}
                            />
                            <ProFormText.Password
                                name={['staff_member', 'step_02', 'account_details', 'password']}
                                label="Password"
                                tooltip="The legal name"
                                placeholder="please enter your legal name"
                                colProps={{xs: 24, sm: 24, md: 12, lg: 12, xl: 12}}
                            />
                        </ProForm.Group>
                    </ProCard>
                </StepsForm.StepForm>

            </StepsForm>
        </PageContainer>
    );
};

export default CreateStaffMember;
